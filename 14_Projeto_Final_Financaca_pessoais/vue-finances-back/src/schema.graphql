scalar Date

type Query {
  accounts: [Account!]!
  categories(operation: Operation): [Category!]
  records(
    """
    Month and Year, format "MM-YYYY" e.g: 10-2020
    """
    month: String
    type: Operation
    accountsIds: [ID!]
    categoriesIds: [ID!]
  ): [Record!]!
  user: User
  users: [User]
    """
    Year, Month and Day, format "YYYY-MM-DD" e.g: 2020-10-17
    """
  totalBalance:(date:Date!):Float!
}

type Mutation {
  createAccount(description: String!): Account!
  createCategory(description: String!, operation: Operation!): Category!
  createRecord(
    accountId: ID!
    categoryId: ID!
    amount: Float!
    type: Operation!
    date: Date!
    description: String!
    tags: String
    note: String
  ): Record!
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, password: String!, name: String!): AuthPayload
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  name: String!
  email: String!
}

type Account {
  id: ID!
  user: User
  description: String!
}

enum Operation {
  DEBIT
  CREDIT
}

type Category {
  id: ID!
  user: User
  description: String!
  operation: Operation!
}

type Record {
  id: ID!
  user: User!
  account: Account!
  category: Category!
  amount: Float!
  type: Operation!
  date: Date!
  description: String!
  tags: String
  note: String
}
